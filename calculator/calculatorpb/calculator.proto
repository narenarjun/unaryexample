syntax = "proto3";

package calculator;
option go_package = "calculator/calculatorpb;calculatorpbgen";

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse { int32 sum_result = 1; }


message PrimeNumberDecompositionRequest{
  int64 number = 1;
}

message PrimeNumberDecompositionResponse{
  int64 prime_factor = 1;
}


message ComputeAverageRequest{
  int32 number = 1;
}

message ComputeAverageResponse{
  double average = 1;
}

message FindMaximumRequest{
  int32 number = 1;
}

message FindMaximumResponse{
  int32 maximum = 1;
}

message SquareRootRequest{
  int32 number = 1;
}

message SquareRootResponse{
  double number_root = 1;
}

service CalculatorService {

  // unary server
  rpc Sum(SumRequest) returns (SumResponse) {};

  // stream server
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){}

  // client stream
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){}

  // bi-direction streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){}

  // error handling example
  // this rpc will throw and error exception if the sent number is negative
  // the error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){}
}